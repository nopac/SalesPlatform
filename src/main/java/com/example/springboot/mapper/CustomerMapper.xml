<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot.model.Customer">
    <id column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="customer_account" jdbcType="VARCHAR" property="customerAccount" />
    <result column="customer_password" jdbcType="VARCHAR" property="customerPassword" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_sex" jdbcType="VARCHAR" property="customerSex" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="customer_mail" jdbcType="VARCHAR" property="customerMail" />
    <result column="customer_city" jdbcType="VARCHAR" property="customerCity" />
    <result column="customer_bank_account" jdbcType="VARCHAR" property="customerBankAccount" />
    <result column="customer_register_date" jdbcType="TIMESTAMP" property="customerRegisterDate" />
    <result column="customer_degree" jdbcType="DOUBLE" property="customerDegree" />
    <result column="customer_wallet_balance" jdbcType="DOUBLE" property="customerWalletBalance" />
    <result column="customer_wallet_integral" jdbcType="INTEGER" property="customerWalletIntegral" />
    <result column="customer_head_pic" jdbcType="VARCHAR" property="customerHeadPic" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    customer_id, customer_account, customer_password, customer_name, customer_sex, customer_phone, 
    customer_mail, customer_city, customer_bank_account, customer_register_date, customer_degree, 
    customer_wallet_balance, customer_wallet_integral, customer_head_pic
  </sql>
  <select id="selectByExample" parameterType="com.example.springboot.model.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customers
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectAll" parameterType="map" resultMap="BaseResultMap">
     select * from customers limit #{currPage} , #{pageSize}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customers
    where customer_id = #{customerId,jdbcType=INTEGER}
  </select>
  <select id="selectByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customers
    where customer_account = #{customerAccount,jdbcType=VARCHAR}
  </select>
  <select id="selectByMail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customers
    where customer_mail = #{customerMail,jdbcType=VARCHAR}
  </select>
  <select id="selectByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customers
    where customer_phone = #{customerPhone,jdbcType=VARCHAR}
  </select>
  <select id="selectByBankAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customers
    where customer_bank_account = #{customerBankAccount,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customers
    where customer_id = #{customerId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.model.CustomerExample">
    delete from customers
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.model.Customer">
    insert into customers (customer_id, customer_account, customer_password, 
      customer_name, customer_sex, customer_phone, 
      customer_mail, customer_city, customer_bank_account, 
      customer_register_date, customer_degree, 
      customer_wallet_balance, customer_wallet_integral, customer_head_pic
      )
    values (#{customerId,jdbcType=INTEGER}, #{customerAccount,jdbcType=VARCHAR}, #{customerPassword,jdbcType=VARCHAR}, 
      #{customerName,jdbcType=VARCHAR}, #{customerSex,jdbcType=VARCHAR}, #{customerPhone,jdbcType=VARCHAR}, 
      #{customerMail,jdbcType=VARCHAR}, #{customerCity,jdbcType=VARCHAR}, #{customerBankAccount,jdbcType=VARCHAR}, 
      #{customerRegisterDate,jdbcType=TIMESTAMP}, #{customerDegree,jdbcType=DOUBLE}, 
      #{customerWalletBalance,jdbcType=DOUBLE}, #{customerWalletIntegral,jdbcType=INTEGER}, #{customerHeadPic,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.model.Customer">
    insert into customers
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="customerAccount != null">
        customer_account,
      </if>
      <if test="customerPassword != null">
        customer_password,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="customerSex != null">
        customer_sex,
      </if>
      <if test="customerPhone != null">
        customer_phone,
      </if>
      <if test="customerMail != null">
        customer_mail,
      </if>
      <if test="customerCity != null">
        customer_city,
      </if>
      <if test="customerBankAccount != null">
        customer_bank_account,
      </if>
      <if test="customerRegisterDate != null">
        customer_register_date,
      </if>
      <if test="customerDegree != null">
        customer_degree,
      </if>
      <if test="customerWalletBalance != null">
        customer_wallet_balance,
      </if>
      <if test="customerWalletIntegral != null">
        customer_wallet_integral,
      </if>
      <if test="customerHeadPic != null">
        customer_head_pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="customerAccount != null">
        #{customerAccount,jdbcType=VARCHAR},
      </if>
      <if test="customerPassword != null">
        #{customerPassword,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerSex != null">
        #{customerSex,jdbcType=VARCHAR},
      </if>
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerMail != null">
        #{customerMail,jdbcType=VARCHAR},
      </if>
      <if test="customerCity != null">
        #{customerCity,jdbcType=VARCHAR},
      </if>
      <if test="customerBankAccount != null">
        #{customerBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="customerRegisterDate != null">
        #{customerRegisterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="customerDegree != null">
        #{customerDegree,jdbcType=DOUBLE},
      </if>
      <if test="customerWalletBalance != null">
        #{customerWalletBalance,jdbcType=DOUBLE},
      </if>
      <if test="customerWalletIntegral != null">
        #{customerWalletIntegral,jdbcType=INTEGER},
      </if>
      <if test="customerHeadPic != null">
        #{customerHeadPic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.model.CustomerExample" resultType="java.lang.Long">
    select count(*) from customers
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customers
    <set>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.customerAccount != null">
        customer_account = #{record.customerAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.customerPassword != null">
        customer_password = #{record.customerPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerSex != null">
        customer_sex = #{record.customerSex,jdbcType=VARCHAR},
      </if>
      <if test="record.customerPhone != null">
        customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.customerMail != null">
        customer_mail = #{record.customerMail,jdbcType=VARCHAR},
      </if>
      <if test="record.customerCity != null">
        customer_city = #{record.customerCity,jdbcType=VARCHAR},
      </if>
      <if test="record.customerBankAccount != null">
        customer_bank_account = #{record.customerBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.customerRegisterDate != null">
        customer_register_date = #{record.customerRegisterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.customerDegree != null">
        customer_degree = #{record.customerDegree,jdbcType=DOUBLE},
      </if>
      <if test="record.customerWalletBalance != null">
        customer_wallet_balance = #{record.customerWalletBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.customerWalletIntegral != null">
        customer_wallet_integral = #{record.customerWalletIntegral,jdbcType=INTEGER},
      </if>
      <if test="record.customerHeadPic != null">
        customer_head_pic = #{record.customerHeadPic,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update customers
    set customer_id = #{record.customerId,jdbcType=INTEGER},
      customer_account = #{record.customerAccount,jdbcType=VARCHAR},
      customer_password = #{record.customerPassword,jdbcType=VARCHAR},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      customer_sex = #{record.customerSex,jdbcType=VARCHAR},
      customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      customer_mail = #{record.customerMail,jdbcType=VARCHAR},
      customer_city = #{record.customerCity,jdbcType=VARCHAR},
      customer_bank_account = #{record.customerBankAccount,jdbcType=VARCHAR},
      customer_register_date = #{record.customerRegisterDate,jdbcType=TIMESTAMP},
      customer_degree = #{record.customerDegree,jdbcType=DOUBLE},
      customer_wallet_balance = #{record.customerWalletBalance,jdbcType=DOUBLE},
      customer_wallet_integral = #{record.customerWalletIntegral,jdbcType=INTEGER},
      customer_head_pic = #{record.customerHeadPic,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.model.Customer">
    update customers
    <set>
      <if test="customerAccount != null">
        customer_account = #{customerAccount,jdbcType=VARCHAR},
      </if>
      <if test="customerPassword != null">
        customer_password = #{customerPassword,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerSex != null">
        customer_sex = #{customerSex,jdbcType=VARCHAR},
      </if>
      <if test="customerPhone != null">
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerMail != null">
        customer_mail = #{customerMail,jdbcType=VARCHAR},
      </if>
      <if test="customerCity != null">
        customer_city = #{customerCity,jdbcType=VARCHAR},
      </if>
      <if test="customerBankAccount != null">
        customer_bank_account = #{customerBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="customerRegisterDate != null">
        customer_register_date = #{customerRegisterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="customerDegree != null">
        customer_degree = #{customerDegree,jdbcType=DOUBLE},
      </if>
      <if test="customerWalletBalance != null">
        customer_wallet_balance = #{customerWalletBalance,jdbcType=DOUBLE},
      </if>
      <if test="customerWalletIntegral != null">
        customer_wallet_integral = #{customerWalletIntegral,jdbcType=INTEGER},
      </if>
      <if test="customerHeadPic != null">
        customer_head_pic = #{customerHeadPic,jdbcType=VARCHAR},
      </if>
    </set>
    where customer_id = #{customerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.model.Customer">
    update customers
    set customer_account = #{customerAccount,jdbcType=VARCHAR},
      customer_password = #{customerPassword,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      customer_sex = #{customerSex,jdbcType=VARCHAR},
      customer_phone = #{customerPhone,jdbcType=VARCHAR},
      customer_mail = #{customerMail,jdbcType=VARCHAR},
      customer_city = #{customerCity,jdbcType=VARCHAR},
      customer_bank_account = #{customerBankAccount,jdbcType=VARCHAR},
      customer_register_date = #{customerRegisterDate,jdbcType=TIMESTAMP},
      customer_degree = #{customerDegree,jdbcType=DOUBLE},
      customer_wallet_balance = #{customerWalletBalance,jdbcType=DOUBLE},
      customer_wallet_integral = #{customerWalletIntegral,jdbcType=INTEGER},
      customer_head_pic = #{customerHeadPic,jdbcType=VARCHAR}
    where customer_id = #{customerId,jdbcType=INTEGER}
  </update>
</mapper>