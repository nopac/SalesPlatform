<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.Return_ListMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot.model.Return_List">
    <id column="sale_record" jdbcType="INTEGER" property="saleRecord" />
    <result column="return_customer" jdbcType="VARCHAR" property="returnCustomer" />
    <result column="return_merchant" jdbcType="VARCHAR" property="returnMerchant" />
    <result column="return_product" jdbcType="INTEGER" property="returnProduct" />
    <result column="return_amount" jdbcType="INTEGER" property="returnAmount" />
    <result column="return_money" jdbcType="DOUBLE" property="returnMoney" />
    <result column="return_date" jdbcType="TIMESTAMP" property="returnDate" />
    <result column="return_state" jdbcType="VARCHAR" property="returnState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sale_record, return_customer, return_merchant, return_product, return_amount, return_money, 
    return_date, return_state
  </sql>
  <select id="selectByExample" parameterType="com.example.springboot.model.Return_ListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from return_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from return_list
    where sale_record = #{saleRecord,jdbcType=INTEGER}
  </select>
  <select id="selectByMerchantAccount" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from return_list
    where return_merchant = #{merchantAccount,jdbcType=VARCHAR} limit #{currPage,jdbcType=INTEGER} , #{pageSize,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from return_list
    where sale_record = #{saleRecord,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.model.Return_ListExample">
    delete from return_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.model.Return_List">
    insert into return_list (sale_record, return_customer, return_merchant, 
      return_product, return_amount, return_money, 
      return_date, return_state)
    values (#{saleRecord,jdbcType=INTEGER}, #{returnCustomer,jdbcType=VARCHAR}, #{returnMerchant,jdbcType=VARCHAR}, 
      #{returnProduct,jdbcType=INTEGER}, #{returnAmount,jdbcType=INTEGER}, #{returnMoney,jdbcType=DOUBLE}, 
      #{returnDate,jdbcType=TIMESTAMP}, #{returnState,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.model.Return_List">
    insert into return_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="saleRecord != null">
        sale_record,
      </if>
      <if test="returnCustomer != null">
        return_customer,
      </if>
      <if test="returnMerchant != null">
        return_merchant,
      </if>
      <if test="returnProduct != null">
        return_product,
      </if>
      <if test="returnAmount != null">
        return_amount,
      </if>
      <if test="returnMoney != null">
        return_money,
      </if>
      <if test="returnDate != null">
        return_date,
      </if>
      <if test="returnState != null">
        return_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="saleRecord != null">
        #{saleRecord,jdbcType=INTEGER},
      </if>
      <if test="returnCustomer != null">
        #{returnCustomer,jdbcType=VARCHAR},
      </if>
      <if test="returnMerchant != null">
        #{returnMerchant,jdbcType=VARCHAR},
      </if>
      <if test="returnProduct != null">
        #{returnProduct,jdbcType=INTEGER},
      </if>
      <if test="returnAmount != null">
        #{returnAmount,jdbcType=INTEGER},
      </if>
      <if test="returnMoney != null">
        #{returnMoney,jdbcType=DOUBLE},
      </if>
      <if test="returnDate != null">
        #{returnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="returnState != null">
        #{returnState,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.model.Return_ListExample" resultType="java.lang.Long">
    select count(*) from return_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="countByMerchantAccount" parameterType="java.lang.String" resultType="java.lang.Long">
    select count(*) from return_list
    where return_merchant = #{merchantAccount,jdbcType=VARCHAR}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update return_list
    <set>
      <if test="record.saleRecord != null">
        sale_record = #{record.saleRecord,jdbcType=INTEGER},
      </if>
      <if test="record.returnCustomer != null">
        return_customer = #{record.returnCustomer,jdbcType=VARCHAR},
      </if>
      <if test="record.returnMerchant != null">
        return_merchant = #{record.returnMerchant,jdbcType=VARCHAR},
      </if>
      <if test="record.returnProduct != null">
        return_product = #{record.returnProduct,jdbcType=INTEGER},
      </if>
      <if test="record.returnAmount != null">
        return_amount = #{record.returnAmount,jdbcType=INTEGER},
      </if>
      <if test="record.returnMoney != null">
        return_money = #{record.returnMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.returnDate != null">
        return_date = #{record.returnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.returnState != null">
        return_state = #{record.returnState,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update return_list
    set sale_record = #{record.saleRecord,jdbcType=INTEGER},
      return_customer = #{record.returnCustomer,jdbcType=VARCHAR},
      return_merchant = #{record.returnMerchant,jdbcType=VARCHAR},
      return_product = #{record.returnProduct,jdbcType=INTEGER},
      return_amount = #{record.returnAmount,jdbcType=INTEGER},
      return_money = #{record.returnMoney,jdbcType=DOUBLE},
      return_date = #{record.returnDate,jdbcType=TIMESTAMP},
      return_state = #{record.returnState,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.model.Return_List">
    update return_list
    <set>
      <if test="returnCustomer != null">
        return_customer = #{returnCustomer,jdbcType=VARCHAR},
      </if>
      <if test="returnMerchant != null">
        return_merchant = #{returnMerchant,jdbcType=VARCHAR},
      </if>
      <if test="returnProduct != null">
        return_product = #{returnProduct,jdbcType=INTEGER},
      </if>
      <if test="returnAmount != null">
        return_amount = #{returnAmount,jdbcType=INTEGER},
      </if>
      <if test="returnMoney != null">
        return_money = #{returnMoney,jdbcType=DOUBLE},
      </if>
      <if test="returnDate != null">
        return_date = #{returnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="returnState != null">
        return_state = #{returnState,jdbcType=VARCHAR},
      </if>
    </set>
    where sale_record = #{saleRecord,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.model.Return_List">
    update return_list
    set return_customer = #{returnCustomer,jdbcType=VARCHAR},
      return_merchant = #{returnMerchant,jdbcType=VARCHAR},
      return_product = #{returnProduct,jdbcType=INTEGER},
      return_amount = #{returnAmount,jdbcType=INTEGER},
      return_money = #{returnMoney,jdbcType=DOUBLE},
      return_date = #{returnDate,jdbcType=TIMESTAMP},
      return_state = #{returnState,jdbcType=VARCHAR}
    where sale_record = #{saleRecord,jdbcType=INTEGER}
  </update>
</mapper>