<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.Comment_From_MerchantMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot.model.Comment_From_Merchant">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="merchant_account" jdbcType="VARCHAR" property="merchantAccount" />
    <result column="customer_account" jdbcType="VARCHAR" property="customerAccount" />
    <result column="sale_record_id" jdbcType="INTEGER" property="saleRecordId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="text_info" jdbcType="VARCHAR" property="textInfo" />
    <result column="rate" jdbcType="DOUBLE" property="rate" />
    <result column="comment_date" jdbcType="TIMESTAMP" property="commentDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment_id, merchant_account, customer_account, sale_record_id, product_name, text_info, 
    rate, comment_date
  </sql>
  <select id="selectByExample" parameterType="com.example.springboot.model.Comment_From_MerchantExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment_from_merchant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment_from_merchant
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <select id="selectByAccount" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment_from_merchant
    where customer_account = #{customerAccount,jdbcType=VARCHAR}
    order by comment_date desc limit #{currPage,jdbcType=INTEGER} , #{pageSize,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment_from_merchant
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.model.Comment_From_MerchantExample">
    delete from comment_from_merchant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.model.Comment_From_Merchant">
    insert into comment_from_merchant (comment_id, merchant_account, customer_account, 
      sale_record_id, product_name, text_info, 
      rate, comment_date)
    values (#{commentId,jdbcType=INTEGER}, #{merchantAccount,jdbcType=VARCHAR}, #{customerAccount,jdbcType=VARCHAR}, 
      #{saleRecordId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{textInfo,jdbcType=VARCHAR}, 
      #{rate,jdbcType=DOUBLE}, #{commentDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.model.Comment_From_Merchant">
    insert into comment_from_merchant
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="merchantAccount != null">
        merchant_account,
      </if>
      <if test="customerAccount != null">
        customer_account,
      </if>
      <if test="saleRecordId != null">
        sale_record_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="textInfo != null">
        text_info,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="commentDate != null">
        comment_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="merchantAccount != null">
        #{merchantAccount,jdbcType=VARCHAR},
      </if>
      <if test="customerAccount != null">
        #{customerAccount,jdbcType=VARCHAR},
      </if>
      <if test="saleRecordId != null">
        #{saleRecordId,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="textInfo != null">
        #{textInfo,jdbcType=VARCHAR},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DOUBLE},
      </if>
      <if test="commentDate != null">
        #{commentDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.model.Comment_From_MerchantExample" resultType="java.lang.Long">
    select count(*) from comment_from_merchant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="countByCustomerAccount" parameterType="java.lang.String" resultType="java.lang.Long">
    select count(*) from comment_from_merchant
    where customer_account = #{customerAccount, jdbcType=VARCHAR}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment_from_merchant
    <set>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.merchantAccount != null">
        merchant_account = #{record.merchantAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.customerAccount != null">
        customer_account = #{record.customerAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.saleRecordId != null">
        sale_record_id = #{record.saleRecordId,jdbcType=INTEGER},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.textInfo != null">
        text_info = #{record.textInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=DOUBLE},
      </if>
      <if test="record.commentDate != null">
        comment_date = #{record.commentDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment_from_merchant
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      merchant_account = #{record.merchantAccount,jdbcType=VARCHAR},
      customer_account = #{record.customerAccount,jdbcType=VARCHAR},
      sale_record_id = #{record.saleRecordId,jdbcType=INTEGER},
      product_name = #{record.productName,jdbcType=VARCHAR},
      text_info = #{record.textInfo,jdbcType=VARCHAR},
      rate = #{record.rate,jdbcType=DOUBLE},
      comment_date = #{record.commentDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.model.Comment_From_Merchant">
    update comment_from_merchant
    <set>
      <if test="merchantAccount != null">
        merchant_account = #{merchantAccount,jdbcType=VARCHAR},
      </if>
      <if test="customerAccount != null">
        customer_account = #{customerAccount,jdbcType=VARCHAR},
      </if>
      <if test="saleRecordId != null">
        sale_record_id = #{saleRecordId,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="textInfo != null">
        text_info = #{textInfo,jdbcType=VARCHAR},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=DOUBLE},
      </if>
      <if test="commentDate != null">
        comment_date = #{commentDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.model.Comment_From_Merchant">
    update comment_from_merchant
    set merchant_account = #{merchantAccount,jdbcType=VARCHAR},
      customer_account = #{customerAccount,jdbcType=VARCHAR},
      sale_record_id = #{saleRecordId,jdbcType=INTEGER},
      product_name = #{productName,jdbcType=VARCHAR},
      text_info = #{textInfo,jdbcType=VARCHAR},
      rate = #{rate,jdbcType=DOUBLE},
      comment_date = #{commentDate,jdbcType=TIMESTAMP}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>