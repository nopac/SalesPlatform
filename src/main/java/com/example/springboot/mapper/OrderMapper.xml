<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot.model.Order">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="order_customer" jdbcType="VARCHAR" property="orderCustomer" />
    <result column="order_merchant" jdbcType="VARCHAR" property="orderMerchant" />
    <result column="order_product" jdbcType="INTEGER" property="orderProduct" />
    <result column="order_price" jdbcType="DOUBLE" property="orderPrice" />
    <result column="order_amount" jdbcType="INTEGER" property="orderAmount" />
    <result column="order_total_price" jdbcType="DOUBLE" property="orderTotalPrice" />
    <result column="order_way" jdbcType="VARCHAR" property="orderWay" />
    <result column="order_state" jdbcType="VARCHAR" property="orderState" />
    <result column="order_date" jdbcType="TIMESTAMP" property="orderDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, order_customer, order_merchant, order_product, order_price, order_amount, 
    order_total_price, order_way, order_state, order_date
  </sql>
  <select id="selectByExample" parameterType="com.example.springboot.model.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <select id="selectByCustomerAccount" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from orders
    where order_customer = #{customerAccount,jdbcType=VARCHAR} limit #{currPage,jdbcType=INTEGER} , #{pageSize,jdbcType=INTEGER}
  </select>
  <select id="selectFinishedByMerchantAccount" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from orders
    where order_merchant = #{merchantAccount,jdbcType=VARCHAR} and order_state = '已完成' limit #{currPage,jdbcType=INTEGER} , #{pageSize,jdbcType=INTEGER}
  </select>
  <select id="selectUnfinishedByMerchantAccount" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from orders
    where order_merchant = #{merchantAccount,jdbcType=VARCHAR} and order_state != '已完成' limit #{currPage,jdbcType=INTEGER} , #{pageSize,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.model.OrderExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.model.Order">
    insert into orders (order_id, order_customer, order_merchant, 
      order_product, order_price, order_amount, 
      order_total_price, order_way, order_state, 
      order_date)
    values (#{orderId,jdbcType=INTEGER}, #{orderCustomer,jdbcType=VARCHAR}, #{orderMerchant,jdbcType=VARCHAR}, 
      #{orderProduct,jdbcType=INTEGER}, #{orderPrice,jdbcType=DOUBLE}, #{orderAmount,jdbcType=INTEGER}, 
      #{orderTotalPrice,jdbcType=DOUBLE}, #{orderWay,jdbcType=VARCHAR}, #{orderState,jdbcType=VARCHAR}, 
      #{orderDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.model.Order">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderCustomer != null">
        order_customer,
      </if>
      <if test="orderMerchant != null">
        order_merchant,
      </if>
      <if test="orderProduct != null">
        order_product,
      </if>
      <if test="orderPrice != null">
        order_price,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="orderTotalPrice != null">
        order_total_price,
      </if>
      <if test="orderWay != null">
        order_way,
      </if>
      <if test="orderState != null">
        order_state,
      </if>
      <if test="orderDate != null">
        order_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderCustomer != null">
        #{orderCustomer,jdbcType=VARCHAR},
      </if>
      <if test="orderMerchant != null">
        #{orderMerchant,jdbcType=VARCHAR},
      </if>
      <if test="orderProduct != null">
        #{orderProduct,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null">
        #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=INTEGER},
      </if>
      <if test="orderTotalPrice != null">
        #{orderTotalPrice,jdbcType=DOUBLE},
      </if>
      <if test="orderWay != null">
        #{orderWay,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null">
        #{orderState,jdbcType=VARCHAR},
      </if>
      <if test="orderDate != null">
        #{orderDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.model.OrderExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="countFinishedByMerchantAccount" parameterType="java.lang.String" resultType="java.lang.Long">
    select count(*) from orders
    where order_merchant = #{merchantAccount,jdbcType=VARCHAR} and order_state = '已完成'
  </select>
  <select id="countUnfinishedByMerchantAccount" parameterType="java.lang.String" resultType="java.lang.Long">
    select count(*) from orders
    where order_merchant = #{merchantAccount,jdbcType=VARCHAR} and order_state != '已完成'
  </select>
  <select id="countByCustomerAccount" parameterType="java.lang.String" resultType="java.lang.Long">
    select count(*) from orders
    where order_customer = #{customerAccount,jdbcType=VARCHAR}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderCustomer != null">
        order_customer = #{record.orderCustomer,jdbcType=VARCHAR},
      </if>
      <if test="record.orderMerchant != null">
        order_merchant = #{record.orderMerchant,jdbcType=VARCHAR},
      </if>
      <if test="record.orderProduct != null">
        order_product = #{record.orderProduct,jdbcType=INTEGER},
      </if>
      <if test="record.orderPrice != null">
        order_price = #{record.orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.orderAmount != null">
        order_amount = #{record.orderAmount,jdbcType=INTEGER},
      </if>
      <if test="record.orderTotalPrice != null">
        order_total_price = #{record.orderTotalPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.orderWay != null">
        order_way = #{record.orderWay,jdbcType=VARCHAR},
      </if>
      <if test="record.orderState != null">
        order_state = #{record.orderState,jdbcType=VARCHAR},
      </if>
      <if test="record.orderDate != null">
        order_date = #{record.orderDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set order_id = #{record.orderId,jdbcType=INTEGER},
      order_customer = #{record.orderCustomer,jdbcType=VARCHAR},
      order_merchant = #{record.orderMerchant,jdbcType=VARCHAR},
      order_product = #{record.orderProduct,jdbcType=INTEGER},
      order_price = #{record.orderPrice,jdbcType=DOUBLE},
      order_amount = #{record.orderAmount,jdbcType=INTEGER},
      order_total_price = #{record.orderTotalPrice,jdbcType=DOUBLE},
      order_way = #{record.orderWay,jdbcType=VARCHAR},
      order_state = #{record.orderState,jdbcType=VARCHAR},
      order_date = #{record.orderDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.model.Order">
    update orders
    <set>
      <if test="orderCustomer != null">
        order_customer = #{orderCustomer,jdbcType=VARCHAR},
      </if>
      <if test="orderMerchant != null">
        order_merchant = #{orderMerchant,jdbcType=VARCHAR},
      </if>
      <if test="orderProduct != null">
        order_product = #{orderProduct,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null">
        order_price = #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="orderAmount != null">
        order_amount = #{orderAmount,jdbcType=INTEGER},
      </if>
      <if test="orderTotalPrice != null">
        order_total_price = #{orderTotalPrice,jdbcType=DOUBLE},
      </if>
      <if test="orderWay != null">
        order_way = #{orderWay,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null">
        order_state = #{orderState,jdbcType=VARCHAR},
      </if>
      <if test="orderDate != null">
        order_date = #{orderDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.model.Order">
    update orders
    set order_customer = #{orderCustomer,jdbcType=VARCHAR},
      order_merchant = #{orderMerchant,jdbcType=VARCHAR},
      order_product = #{orderProduct,jdbcType=INTEGER},
      order_price = #{orderPrice,jdbcType=DOUBLE},
      order_amount = #{orderAmount,jdbcType=INTEGER},
      order_total_price = #{orderTotalPrice,jdbcType=DOUBLE},
      order_way = #{orderWay,jdbcType=VARCHAR},
      order_state = #{orderState,jdbcType=VARCHAR},
      order_date = #{orderDate,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>